name: Publish Draft

on:
  push:
    branches: [master]

env:
  CARGO_TERM_COLOR: always

jobs:
  publish-linux:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt-get update && \
          sudo apt-get install libwebkit2gtk-4.0-dev \
            build-essential \
            curl \
            wget \
            libssl-dev \
            libgtk-3-dev \
            squashfs-tools

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2021-06-09
          override: true

      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'yarn'

      - name: Install Node dependencies
        run: |
          yarn install

      - name: Set environment variables
        run: |
          echo "VERSION=$(cat src-tauri/Cargo.toml | grep version | head -1 | sed 's/[\",(version = )]//g')" >> $GITHUB_ENV

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            src-tauri/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        run: |
          yarn tauri build

      - name: Compress release
        env:
          GZIP: -9
        run: |
          cd src-tauri/target/release/bundle/deb && \
          tar czvf asset-extractor_${{ env.VERSION }}_amd64.deb.tar.gz asset-extractor_${{ env.VERSION }}_amd64.deb
          cd src-tauri/target/release/bundle/appimage && \
          tar czvf asset-extractor_${{ env.VERSION }}_amd64.AppImage.tar.gz asset-extractor_${{ env.VERSION }}_amd64.AppImage

      - name: Update Draft Release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit: ${{ github.sha }}
          tag: ${{ github.sha }}
          name: "Shroom Kingdom Assets Extractor ${{ env.VERSION }} [Run#: ${{ github.run_number }}]"
          artifacts: "target/release/smmdb-client-linux.tar.gz"
          draft: true
          allowUpdates: true

  publish-windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2021-06-09
          override: true

      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'yarn'

      - name: Set environment variables
        run: |
          echo "VERSION=$(cat src-tauri/Cargo.toml | grep version | head -1 | sed 's/[\",(version = )]//g')" >> $GITHUB_ENV

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            src-tauri/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - name: Compress release
        env:
          GZIP: -9
        run: |
          ls src-tauri/target/release/bundle
          cd src-tauri/target/release/bundle && \
          tar czvf asset-extractor_${{ env.VERSION }}_amd64.tar.gz asset-extractor_${{ env.VERSION }}_amd64.exe
        shell: bash

      - name: Update Draft Release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit: ${{ github.sha }}
          tag: ${{ github.sha }}
          name: "SMMDB Client ${{ env.VERSION }} [Run#: ${{ github.run_number }}]"
          artifacts: "target/release/smmdb-client-windows.tar.gz"
          draft: true
          allowUpdates: true

  publish-macos:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2
      - name: Install nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2021-04-25
          override: true
      - name: Set environment variables
        run: |
          echo "VERSION=$(cat Cargo.toml | grep version | head -1 | sed 's/[\",(version = )]//g')" >> $GITHUB_ENV
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - name: Compress release
        env:
          GZIP: -9
        run: |
          cd target/release && \
          tar czvf smmdb-client-macos.tar.gz smmdb
      - name: Update Draft Release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit: ${{ github.sha }}
          tag: ${{ github.sha }}
          name: "SMMDB Client ${{ env.VERSION }} [Run#: ${{ github.run_number }}]"
          artifacts: "target/release/smmdb-client-macos.tar.gz"
          draft: true
          allowUpdates: true
